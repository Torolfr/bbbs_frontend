{"version":3,"sources":["components/Cards/CardArticle/locales/RU.js","components/Cards/CardArticle/CardArticle.js","pages/Articles/index.js","api/articles-page.js","pages/Articles/locales/RU.js","pages/Articles/Articles.js"],"names":["texts","linkText","CardArticle","data","title","info","annotation","image","articleUrl","isMain","color","classNames","sectionClass","join","trim","cardColor","className","draggable","href","target","rel","src","staticImageUrl","alt","CardAnnotation","description","defaultProps","getArticlesPageData","limit","offset","axios","get","baseURL","apiUrl","params","then","response","catch","err","Promise","reject","getArticleById","id","articlesPageTexts","headTitle","MAIN_PAGE_TITLE","ARTICLES_TITLE","headDescription","textStubNoData","PAGE_SIZE_PAGINATE","small","default","MAX_SCREEN_WIDTH","Articles","articleId","useParams","pageSize","usePageWidth","useState","isPageError","setIsPageError","useSingleCardAtDynamicRoute","apiCallback","dynamicParam","singleCard","isSingleCardShown","filtersAndPaginationSettings","apiGetDataCallback","dontStartWhileTrue","useFiltrationWithMainCard","dataToRender","mainCard","isMainCard","isMainCardShown","isPageLoading","isPaginationUsed","totalPages","pageIndex","changePageIndex","isCentered","length","titleText","ERROR_MESSAGES","generalErrorMessage","renderCardsContainer","renderPageContent","text","toLowerCase","ARTICLES_URL","renderCards","renderPagination","isPaginate","map","item","i","COLORS","pageCount","value","onChange"],"mappings":"uHAAA,IAIeA,EAJD,CACZC,SAAU,oF,sCCMZ,SAASC,EAAT,GAKI,IAAD,IAJDC,KAAQC,EAIP,EAJOA,MAAOC,EAId,EAJcA,KAAMC,EAIpB,EAJoBA,WAAYC,EAIhC,EAJgCA,MAAOC,EAIvC,EAJuCA,WACxCC,EAGC,EAHDA,OACAC,EAEC,EAFDA,MAGMC,EAAa,CACjB,iBACAF,EACI,mCACA,sCALL,EADDG,cASGC,KAAK,KACLC,OACGC,EAAYN,EAAS,SAAWC,EAEtC,OACE,0BAASM,UAAWL,EAApB,UACE,eAAC,IAAD,CACEC,aAAY,uBAAkBH,EAAS,oBAAsB,IAC7DC,MAAOK,EAFT,UAIE,sBAAKC,UAAU,2BAAf,UACE,mBACEC,UAAU,QACVC,KAAMV,EACNQ,UAAU,0BACVG,OAAO,SACPC,IAAI,sBALN,SAOE,cAAC,IAAD,CAASR,aAAa,sBAAsBR,MAAOA,MAErD,cAAC,IAAD,CAASQ,aAAa,qBAAqBR,MAAOC,OAGnDI,GACC,qBAAKO,UAAU,sEAAf,SACGT,GACC,qBACEU,UAAU,QACVI,IAAG,UAAKC,IAAL,YAAuBf,GAC1BgB,IAAKnB,EACLY,UAAU,0BAMlB,mBACEC,UAAU,QACVC,KAAMV,EACNQ,UAAU,0BACVG,OAAO,SACPC,IAAI,sBALN,SAOGpB,EAAMC,cAGX,cAACuB,EAAA,EAAD,CAAgBC,YAAanB,EAAYG,OAAQA,OAiBvDP,EAAYwB,aAAe,CACzBvB,KAAM,GACNC,MAAO,GACPC,KAAM,GACNE,MAAO,GACPC,WAAY,GACZF,WAAY,GACZG,QAAQ,EACRC,MAAO,QACPE,aAAc,IAGDV,O,uDC/Ff,iV,iCCAA,gGAGA,SAASyB,EAAT,GAAiD,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACpC,OAAOC,IACJC,IADI,UACGC,KADH,OACaC,IADb,cACiC,CACpCC,OAAQ,CAAEN,QAAOC,YAElBM,MAAK,SAACC,GAAD,OAAcA,EAASjC,QAC5BkC,OAAM,SAACC,GAAD,OAASC,QAAQC,OAAR,OAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAKF,aAGxC,SAASK,EAAeC,GACtB,OAAOZ,IACJC,IADI,UACGC,KADH,OACaC,IADb,qBACgCS,EADhC,MAEJP,MAAK,SAACC,GAAD,OAAcA,EAASjC,QAC5BkC,OAAM,SAACC,GAAD,OAASC,QAAQC,OAAR,OAAeF,QAAf,IAAeA,OAAf,EAAeA,EAAKF,e,+FCPzBO,EAPW,CACxBC,UAAU,GAAD,OAAKC,IAAL,cAA0BC,KACnCC,gBAAiB,6OACjB3C,MAAO0C,IACPE,eAAgB,+M,iDCiBZC,EAAqB,CACzBC,MAAO,EACPC,QAAS,IAGLC,EAAmB,CACvBF,MAAO,MAGDN,EAAsDD,EAAtDC,UAAWG,EAA2CJ,EAA3CI,gBAAiB3C,EAA0BuC,EAA1BvC,MAAO4C,EAAmBL,EAAnBK,eAkJ5BK,UAhJf,WACE,IAAQC,EAAcC,cAAdD,UAGAE,EAAaC,YAAaL,EAAkBH,GAA5CO,SAER,EAAsCE,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAGA,EAA0CC,YAA4B,CACpEC,YAAarB,IACbsB,aAAcT,EACdM,mBAHMI,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,kBAOdC,EAA+B,CACnCC,mBAAoBxC,IACpB6B,WACAI,iBACAQ,qBAAsBd,GAGxB,EAUIe,YAA0BH,GAT5BI,EADF,EACEA,aACAC,EAFF,EAEEA,SACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,gBACAC,EALF,EAKEA,cACAC,EANF,EAMEA,iBACAC,EAPF,EAOEA,WACAC,EARF,EAQEA,UACAC,EATF,EASEA,gBAIF,OAAIJ,GAAkBpB,IAAcW,EAC3B,cAAC,IAAD,CAAQc,YAAU,IAIzB,mCACE,cAAC,IAAD,CAAUnC,UAAWA,EAAWG,gBAAiBA,EAAjD,SAMJ,WAEE,GAAIY,IAAiBW,EAAaU,SAAWR,IAAelB,EAC1D,OAeA,cAAC,IAAD,CACE2B,UACEtB,EACIuB,IAAeC,oBAAoB/E,MACnC4C,IAhBV,OACE,0BAAShC,UAAU,yBAAnB,UACE,cAAC,IAAD,CAASZ,MAAOA,EAAOQ,aAAa,YAEnCwE,OAfAC,OAiCP,SAASD,IACP,OAAInB,EAEA,sBAAKjD,UAAU,2CAAf,UACE,cAAC,IAAD,CAAab,KAAM6D,EAAYvD,QAAM,IAErC,cAAC,IAAD,CAAMG,aAAa,kCAAnB,SACE,mBAAGI,UAAU,YAAb,SAA0BgD,EAAW1D,eAGvC,cAAC,IAAD,CACEgF,KAAI,6BAASlF,EAAMmF,eACnBrE,KAAMsE,SAOZ,qCACGC,IACAC,OAKP,SAASD,IACP,OAAId,EACK,cAAC,IAAD,CAAQgB,YAAU,IAIzB,qCACGlB,GACC,yBAASzD,UAAU,0BAAnB,SACE,cAAC,IAAD,CAAab,KAAMoE,EAAU9D,QAAM,MAIvC,yBAASO,UAAU,uBAAnB,SACGsD,EAAasB,KAAI,SAACC,EAAMC,GAAP,OAChB,cAAC,IAAD,CAEEpF,MAAOqF,KAAQD,EAAI,GAAKC,IAAOf,QAC/B7E,KAAM0F,EACNjF,aAAa,YAJf,OACOiF,QADP,IACOA,OADP,EACOA,EAAMnD,YAWvB,SAASgD,IACP,OAAId,EAAa,EAEb,cAAC,IAAD,CACEhE,aAAa,4BACboF,UAAWpB,EACXqB,MAAOpB,EACPqB,SAAUpB,IAIT","file":"static/js/12.5e482785.chunk.js","sourcesContent":["const texts = {\n  linkText: 'читать на сайте',\n};\n\nexport default texts;\n","import PropTypes from 'prop-types';\nimport texts from './locales/RU';\nimport { staticImageUrl } from '../../../config/config';\nimport CardAnnotation from '../CardAnnotation/CardAnnotation';\nimport { Caption, Card, TitleH2 } from '../../utils';\nimport './CardArticle.scss';\n\nfunction CardArticle({\n  data: { title, info, annotation, image, articleUrl },\n  isMain,\n  color,\n  sectionClass,\n}) {\n  const classNames = [\n    'card-container',\n    isMain\n      ? 'card-container_type_main-article'\n      : 'card-container_type_article fade-in',\n    sectionClass,\n  ]\n    .join(' ')\n    .trim();\n  const cardColor = isMain ? 'yellow' : color;\n\n  return (\n    <article className={classNames}>\n      <Card\n        sectionClass={`article-card ${isMain ? 'article-card_main' : ''}`}\n        color={cardColor}\n      >\n        <div className=\"article-card__title-wrap\">\n          <a\n            draggable=\"false\"\n            href={articleUrl}\n            className=\"article-card__link-wrap\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <TitleH2 sectionClass=\"article-card__title\" title={title} />\n          </a>\n          <Caption sectionClass=\"article-card__info\" title={info} />\n        </div>\n\n        {isMain && (\n          <div className=\"article-card__link-wrap article-card__link-wrap_content_article-img\">\n            {image && (\n              <img\n                draggable=\"false\"\n                src={`${staticImageUrl}/${image}`}\n                alt={title}\n                className=\"article-card__image\"\n              />\n            )}\n          </div>\n        )}\n\n        <a\n          draggable=\"false\"\n          href={articleUrl}\n          className=\"link article-card__link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {texts.linkText}\n        </a>\n      </Card>\n      <CardAnnotation description={annotation} isMain={isMain} />\n    </article>\n  );\n}\n\nCardArticle.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any),\n  title: PropTypes.string,\n  info: PropTypes.string,\n  image: PropTypes.string,\n  articleUrl: PropTypes.string,\n  annotation: PropTypes.string,\n  color: PropTypes.string,\n  isMain: PropTypes.bool,\n  sectionClass: PropTypes.string,\n};\n\nCardArticle.defaultProps = {\n  data: {},\n  title: '',\n  info: '',\n  image: '',\n  articleUrl: '',\n  annotation: '',\n  isMain: false,\n  color: 'white',\n  sectionClass: '',\n};\n\nexport default CardArticle;\n","import BasePage from '../../layout/BasePage';\nimport CardArticle from '../../components/Cards/CardArticle/CardArticle';\nimport AnimatedPageContainer from '../../components/AnimatedPageContainer/AnimatedPageContainer';\nimport {\n  Card,\n  Loader,\n  NextArticleLink,\n  Paginate,\n  TitleH1,\n} from '../../components/utils';\n\nexport {\n  BasePage,\n  TitleH1,\n  CardArticle,\n  Paginate,\n  AnimatedPageContainer,\n  Loader,\n  NextArticleLink,\n  Card,\n};\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\nfunction getArticlesPageData({ limit, offset }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/articles/`, {\n      params: { limit, offset },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nfunction getArticleById(id) {\n  return axios\n    .get(`${baseURL}${apiUrl}/articles/${id}/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nexport { getArticlesPageData, getArticleById };\n","import { ARTICLES_TITLE, MAIN_PAGE_TITLE } from '../../../config/routes';\n\nconst articlesPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${ARTICLES_TITLE}`,\n  headDescription: 'Статьи, которые рекомендуют наши наставники.',\n  title: ARTICLES_TITLE,\n  textStubNoData: 'Информация появится в ближайшее время.',\n};\n\nexport default articlesPageTexts;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport articlesPageTexts from './locales/RU';\nimport { COLORS, ERROR_MESSAGES } from '../../config/constants';\nimport { ARTICLES_URL } from '../../config/routes';\nimport {\n  useFiltrationWithMainCard,\n  usePageWidth,\n  useSingleCardAtDynamicRoute,\n} from '../../hooks';\nimport { getArticleById, getArticlesPageData } from '../../api/articles-page';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  Card,\n  CardArticle,\n  Loader,\n  NextArticleLink,\n  Paginate,\n  TitleH1,\n} from './index';\nimport './Articles.scss';\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 8,\n  default: 12,\n};\n\nconst MAX_SCREEN_WIDTH = {\n  small: 1024,\n};\n\nconst { headTitle, headDescription, title, textStubNoData } = articlesPageTexts;\n\nfunction Articles() {\n  const { articleId } = useParams();\n\n  // определяет размер страницы при ресайзе\n  const { pageSize } = usePageWidth(MAX_SCREEN_WIDTH, PAGE_SIZE_PAGINATE);\n  // стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  // одиночная карточка при переходе по динамическому маршруту\n  const { singleCard, isSingleCardShown } = useSingleCardAtDynamicRoute({\n    apiCallback: getArticleById,\n    dynamicParam: articleId,\n    setIsPageError,\n  });\n\n  // фильтрация и пагинация\n  const filtersAndPaginationSettings = {\n    apiGetDataCallback: getArticlesPageData,\n    pageSize,\n    setIsPageError,\n    dontStartWhileTrue: !!articleId, // скрипты выполнятся, только если нет запроса по id\n  };\n\n  const {\n    dataToRender,\n    mainCard,\n    isMainCard,\n    isMainCardShown,\n    isPageLoading,\n    isPaginationUsed,\n    totalPages,\n    pageIndex,\n    changePageIndex,\n  } = useFiltrationWithMainCard(filtersAndPaginationSettings);\n\n  // обычная загрузка или есть переход по id, но статья ещё не загружена\n  if (isPageLoading || (articleId && !isSingleCardShown)) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <>\n      <BasePage headTitle={headTitle} headDescription={headDescription}>\n        {renderPageContent()}\n      </BasePage>\n    </>\n  );\n\n  function renderPageContent() {\n    // ошибка или (нет данных и при этом это не динамический роут)\n    if (isPageError || (!dataToRender.length && !isMainCard && !articleId)) {\n      return renderAnimatedContainer();\n    }\n\n    return (\n      <section className=\"articles page__section\">\n        <TitleH1 title={title} sectionClass=\"fade-in\" />\n\n        {renderCardsContainer()}\n      </section>\n    );\n  }\n\n  // заглушка\n  function renderAnimatedContainer() {\n    return (\n      <AnimatedPageContainer\n        titleText={\n          isPageError\n            ? ERROR_MESSAGES.generalErrorMessage.title\n            : textStubNoData\n        }\n      />\n    );\n  }\n\n  function renderCardsContainer() {\n    if (isSingleCardShown) {\n      return (\n        <div className=\"articles__single-card-container scale-in\">\n          <CardArticle data={singleCard} isMain />\n\n          <Card sectionClass=\"articles__single-card-paragraph\">\n            <p className=\"paragraph\">{singleCard.annotation}</p>\n          </Card>\n\n          <NextArticleLink\n            text={`Все ${title.toLowerCase()}`}\n            href={ARTICLES_URL}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {renderCards()}\n        {renderPagination()}\n      </>\n    );\n  }\n\n  function renderCards() {\n    if (isPaginationUsed) {\n      return <Loader isPaginate />;\n    }\n\n    return (\n      <>\n        {isMainCardShown && (\n          <section className=\"articles__main scale-in\">\n            <CardArticle data={mainCard} isMain />\n          </section>\n        )}\n\n        <section className=\"articles__cards-grid\">\n          {dataToRender.map((item, i) => (\n            <CardArticle\n              key={item?.id}\n              color={COLORS[(i + 1) % COLORS.length]}\n              data={item}\n              sectionClass=\"scale-in\"\n            />\n          ))}\n        </section>\n      </>\n    );\n  }\n\n  function renderPagination() {\n    if (totalPages > 1) {\n      return (\n        <Paginate\n          sectionClass=\"cards-section__pagination\"\n          pageCount={totalPages}\n          value={pageIndex}\n          onChange={changePageIndex}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default Articles;\n"],"sourceRoot":""}