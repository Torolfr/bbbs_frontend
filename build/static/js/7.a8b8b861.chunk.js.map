{"version":3,"sources":["components/TagsList/TagsList.js","components/Cards/CardArticle/locales/RU.js","components/Cards/CardArticle/CardArticle.js","pages/Articles/index.js","components/PlacesRecommend/locales/RU.js","components/FormRecommendation/locales/RU.js","components/FormRecommendation/FormRecommendation.js","components/PlacesRecommend/PlacesRecommend.js","pages/Places/Places.js"],"names":["TagsList","filterList","name","handleClick","classNames","sectionClass","join","trim","classNamesList","length","className","map","item","value","filter","title","isActive","onClick","defaultProps","texts","linkText","CardArticle","data","info","annotation","image","articleUrl","isMain","color","cardColor","draggable","href","target","rel","src","staticImageUrl","alt","CardAnnotation","description","closeButtonlabel","recommendadionTextPart1","recommendadionButton","recommendadionTextPart2","titlePlaceholder","linkPlaceholder","addressPlaceholder","genderMale","genderFemale","agePlaceholder","activityPlaceholder","cityPlaceholder","descPlaceholder","descPlaceholderMobile","buttonText","buttonTextLoading","addPhotoBtnDefault","addPhotoBtnChange","addPhotoAdded","FormRecommendation","isOpen","onSubmit","activityTypes","isWaitingResponse","useState","textAreaPlaceholder","setTextAreaPlaceholder","useEffect","tablet","window","matchMedia","listener","matches","addEventListener","removeEventListener","cities","useContext","CitiesContext","ErrorsContext","serverError","clearError","errorsString","getServerErrors","isAnimated","setIsAnimated","useFormWithValidation","values","handleChange","errors","isValid","resetForm","handleChangeFiles","setTimeout","formClassNames","evt","preventDefault","noValidate","id","type","placeholder","onChange","required","minLength","placesValidationSettings","maxLength","error","link","address","htmlFor","gender","age","max","min","options","inputName","activityType","isFormOpen","city","isTextarea","accept","regExpImages","isSmall","isSpan","isDisabled","isSubmittable","PlacesRecommend","openSuccessPopup","setError","generalErrorMessage","ERROR_MESSAGES","unauthorized","ERROR_CODES","badRequest","setIsFormOpen","setIsWaitingResponse","scrollAnchorRef","useRef","closeForm","ref","aria-label","current","scrollIntoView","behavior","postPlace","formData","FormData","append","createFormData","then","catch","err","status","message","finally","headTitle","placesPageTexts","headDescription","textStubNoData","paragraphNoContent","toMainPageLinkTitle","PAGE_SIZE_PAGINATE","small","default","MAX_SCREEN_WIDTH","Places","placeId","useParams","useActivityTypes","activityTypesSimplified","currentUser","CurrentUserContext","openPopupCities","PopupsContext","currentAnonymousCity","useLocalStorage","localStUserCity","getLocalStorageItem","userCity","isCityChanged","setIsCityChanged","pageSize","usePageWidth","isPageError","setIsPageError","isPopupRecommendSuccessOpen","setIsPopupRecommendSuccessOpen","openPopupRecommendSuccess","useSingleCardAtDynamicRoute","apiCallback","getPlaceById","dynamicParam","singleCard","isSingleCardShown","filtersAndPaginationSettings","apiGetDataCallback","getPlaces","apiGetFiltersCallback","getPlacesTags","apiGetMainCardCallback","getChosenPlace","apiFilterNames","tags","chosen","ageRestriction","dontStartWhileTrue","useFiltrationForPlaces","dataToRender","filters","ageFilters","mainCard","isMainCard","isMainCardShown","isPageLoading","isFiltersUsed","isPaginationUsed","isNoFilteredResults","isFormRecommendationShown","totalPages","pageIndex","changePageIndex","changeFilter","changeAgeFilter","resetStatesAndGetNewData","DELAY_RENDER","isCentered","BasePage","AnimatedPageContainer","titleText","renderFiltersAndCards","renderPageContent","onClose","CardPlace","isBig","text","PLACES_URL","isPaginate","renderFilters","renderAgeFilters","renderPlaces","place","i","COLORS","renderPagination","pageCount"],"mappings":"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","file":"static/js/7.a8b8b861.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PseudoButtonTag } from '../utils';\nimport './TagsList.scss';\n\nconst centeringFiltersMaxLength = 3;\n\nfunction TagsList({ filterList, name, handleClick, sectionClass }) {\n  const classNames = ['tags', sectionClass].join(' ').trim();\n  const classNamesList = [\n    'tags__list',\n    filterList.length > centeringFiltersMaxLength ? 'tags__list_mobile' : '',\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <div className={classNames}>\n      <ul className={classNamesList}>\n        {filterList.map((item) => (\n          <li className=\"tags__list-item\" key={item?.name}>\n            <PseudoButtonTag\n              name={name}\n              value={item?.filter}\n              title={item?.name}\n              isActive={item?.isActive}\n              onClick={handleClick}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTagsList.propTypes = {\n  filterList: PropTypes.arrayOf(PropTypes.any),\n  sectionClass: PropTypes.string,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n\nTagsList.defaultProps = {\n  filterList: [],\n  sectionClass: '',\n  name: '',\n  handleClick: () => {},\n};\n\nexport default TagsList;\n","const texts = {\n  linkText: 'читать на сайте',\n};\n\nexport default texts;\n","import PropTypes from 'prop-types';\nimport texts from './locales/RU';\nimport { staticImageUrl } from '../../../config/config';\nimport CardAnnotation from '../CardAnnotation/CardAnnotation';\nimport { Caption, Card, TitleH2 } from '../../utils';\nimport './CardArticle.scss';\n\nfunction CardArticle({\n  data: { title, info, annotation, image, articleUrl },\n  isMain,\n  color,\n  sectionClass,\n}) {\n  const classNames = [\n    'card-container',\n    isMain\n      ? 'card-container_type_main-article'\n      : 'card-container_type_article fade-in',\n    sectionClass,\n  ]\n    .join(' ')\n    .trim();\n  const cardColor = isMain ? 'yellow' : color;\n\n  return (\n    <article className={classNames}>\n      <Card\n        sectionClass={`article-card ${isMain ? 'article-card_main' : ''}`}\n        color={cardColor}\n      >\n        <div className=\"article-card__title-wrap\">\n          <a\n            draggable=\"false\"\n            href={articleUrl}\n            className=\"article-card__link-wrap\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <TitleH2 sectionClass=\"article-card__title\" title={title} />\n          </a>\n          <Caption sectionClass=\"article-card__info\" title={info} />\n        </div>\n\n        {isMain && (\n          <div className=\"article-card__link-wrap article-card__link-wrap_content_article-img\">\n            {image && (\n              <img\n                draggable=\"false\"\n                src={`${staticImageUrl}/${image}`}\n                alt={title}\n                className=\"article-card__image\"\n              />\n            )}\n          </div>\n        )}\n\n        <a\n          draggable=\"false\"\n          href={articleUrl}\n          className=\"link article-card__link\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {texts.linkText}\n        </a>\n      </Card>\n      <CardAnnotation description={annotation} isMain={isMain} />\n    </article>\n  );\n}\n\nCardArticle.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any),\n  title: PropTypes.string,\n  info: PropTypes.string,\n  image: PropTypes.string,\n  articleUrl: PropTypes.string,\n  annotation: PropTypes.string,\n  color: PropTypes.string,\n  isMain: PropTypes.bool,\n  sectionClass: PropTypes.string,\n};\n\nCardArticle.defaultProps = {\n  data: {},\n  title: '',\n  info: '',\n  image: '',\n  articleUrl: '',\n  annotation: '',\n  isMain: false,\n  color: 'white',\n  sectionClass: '',\n};\n\nexport default CardArticle;\n","import BasePage from '../../layout/BasePage';\nimport CardArticle from '../../components/Cards/CardArticle/CardArticle';\nimport AnimatedPageContainer from '../../components/AnimatedPageContainer/AnimatedPageContainer';\nimport {\n  Card,\n  Loader,\n  NextArticleLink,\n  Paginate,\n  TitleH1,\n} from '../../components/utils';\n\nexport {\n  BasePage,\n  TitleH1,\n  CardArticle,\n  Paginate,\n  AnimatedPageContainer,\n  Loader,\n  NextArticleLink,\n  Card,\n};\n","const texts = {\n  closeButtonlabel: 'Закрыть форму',\n  recommendadionTextPart1: `Если вы были в интересном месте и хотите порекомендовать его другим${'\\u00A0'}наставникам –${'\\u00A0'}`,\n  recommendadionButton: `заполните${'\\u00A0'}форму`,\n  recommendadionTextPart2: `, и мы добавим вашу${'\\u00A0'}рекомендацию.`,\n};\n\nexport default texts;\n","const texts = {\n  titlePlaceholder: 'Название*',\n  linkPlaceholder: 'Сайт',\n  addressPlaceholder: 'Адрес*',\n  genderMale: 'Мальчик',\n  genderFemale: 'Девочка',\n  agePlaceholder: 'Возраст*',\n  activityPlaceholder: 'Тип отдыха*',\n  cityPlaceholder: 'Город*',\n  descPlaceholder:\n    'Комментарий* Поделитесь впечатлениями о проведенном времени',\n  descPlaceholderMobile: 'Комментарий*',\n  buttonText: 'Отправить',\n  buttonTextLoading: 'Отправка...',\n  addPhotoBtnDefault: 'Добавить фото',\n  addPhotoBtnChange: 'Изменить',\n  addPhotoAdded: 'Фото добавлено',\n};\n\nexport default texts;\n","import { useContext, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport texts from './locales/RU';\nimport { CitiesContext, ErrorsContext } from '../../contexts';\nimport { regExpImages } from '../../config/constants';\nimport { useFormWithValidation } from '../../hooks';\nimport { placesValidationSettings } from '../../config/validation-settings';\nimport getServerErrors from '../../utils/form-errors';\nimport { Button, ButtonRound, DropDownSelect, Input } from '../utils';\nimport './FormRecommendation.scss';\n\nconst {\n  titlePlaceholder,\n  linkPlaceholder,\n  addressPlaceholder,\n  genderMale,\n  genderFemale,\n  agePlaceholder,\n  activityPlaceholder,\n  cityPlaceholder,\n  descPlaceholder,\n  descPlaceholderMobile,\n  buttonText,\n  addPhotoBtnDefault,\n  addPhotoBtnChange,\n  addPhotoAdded,\n  buttonTextLoading,\n} = texts;\n\nconst animationDelay = 600;\nconst maxTabletWidth = 900;\n\nfunction FormRecommendation({\n  isOpen,\n  onSubmit,\n  activityTypes,\n  isWaitingResponse,\n}) {\n  const [textAreaPlaceholder, setTextAreaPlaceholder] = useState('');\n\n  useEffect(() => {\n    const tablet = window.matchMedia(`(max-width: ${maxTabletWidth}px)`);\n\n    const listener = () => {\n      if (tablet.matches) setTextAreaPlaceholder(descPlaceholderMobile);\n      else setTextAreaPlaceholder(descPlaceholder);\n    };\n    listener();\n\n    tablet.addEventListener('change', listener);\n\n    return () => {\n      tablet.removeEventListener('change', listener);\n    };\n  }, []);\n\n  const { cities } = useContext(CitiesContext);\n  const { serverError, clearError } = useContext(ErrorsContext);\n\n  const errorsString = serverError ? getServerErrors(serverError) : '';\n\n  const [isAnimated, setIsAnimated] = useState(false);\n\n  const {\n    values,\n    handleChange,\n    errors,\n    isValid,\n    resetForm,\n    handleChangeFiles,\n  } = useFormWithValidation();\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    onSubmit(values);\n  };\n\n  useEffect(() => {\n    if (isOpen) {\n      resetForm();\n      setTimeout(() => {\n        setIsAnimated(true);\n      }, animationDelay);\n    } else {\n      setIsAnimated(false);\n    }\n    clearError();\n  }, [isOpen]);\n\n  const formClassNames = [\n    'form-recom',\n    isOpen ? 'form-recom_opened' : '',\n    isAnimated ? 'form-recom_animated' : '',\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <form\n      className={formClassNames}\n      name=\"formRecomendation\"\n      onSubmit={handleSubmit}\n      noValidate\n    >\n      {isOpen && (\n        <>\n          <div className=\"form-recom__input-container\">\n            <Input\n              id=\"formRecommendTitle\"\n              sectionClass=\"form-recom__input-wrap form-recom__input-wrap_medium form-recom__input-wrap_indentation\"\n              type=\"text\"\n              name=\"title\"\n              placeholder={titlePlaceholder}\n              onChange={handleChange}\n              value={values.title}\n              required\n              minLength={placesValidationSettings.title.minLength}\n              maxLength={placesValidationSettings.title.maxLength}\n              error={errors?.title}\n            />\n\n            <Input\n              id=\"formRecommendLink\"\n              sectionClass=\"form-recom__input-wrap form-recom__input-wrap_medium\"\n              type=\"text\"\n              name=\"link\"\n              placeholder={linkPlaceholder}\n              onChange={handleChange}\n              value={values.link}\n              error={errors?.link}\n            />\n          </div>\n\n          <Input\n            id=\"formRecommendAddress\"\n            sectionClass=\"form-recom__input-wrap\"\n            type=\"text\"\n            name=\"address\"\n            placeholder={addressPlaceholder}\n            onChange={handleChange}\n            value={values.address}\n            required\n            minLength={placesValidationSettings.address.minLength}\n            maxLength={placesValidationSettings.address.maxLength}\n            error={errors?.address}\n          />\n\n          <div className=\"form-recom__input-container\">\n            <label\n              className=\"form-recom__label\"\n              htmlFor=\"formRecommendationBoy\"\n            >\n              <input\n                id=\"formRecommendationBoy\"\n                className=\"form-recom__input-radio\"\n                type=\"radio\"\n                name=\"gender\"\n                onChange={handleChange}\n                value=\"male\"\n                required\n              />\n              <span\n                className={`form-recom__pseudo-radio ${\n                  errors?.gender ? 'form-recom__pseudo-radio_error' : ''\n                }`}\n              >\n                {genderMale}\n              </span>\n            </label>\n            <label\n              className=\"form-recom__label\"\n              htmlFor=\"formRecommendationGirl\"\n            >\n              <input\n                id=\"formRecommendationGirl\"\n                className=\"form-recom__input-radio\"\n                type=\"radio\"\n                name=\"gender\"\n                onChange={handleChange}\n                value=\"female\"\n                required\n              />\n              <span\n                className={`form-recom__pseudo-radio ${\n                  errors?.gender ? 'form-recom__pseudo-radio_error' : ''\n                }`}\n              >\n                {genderFemale}\n              </span>\n            </label>\n\n            <Input\n              id=\"formRecommendAge\"\n              sectionClass=\"form-recom__input-wrap form-recom__input-wrap_narrow\"\n              type=\"number\"\n              name=\"age\"\n              placeholder={agePlaceholder}\n              onChange={handleChange}\n              value={values.age}\n              required\n              max={placesValidationSettings.age.max}\n              min={placesValidationSettings.age.min}\n              error={errors?.age}\n            />\n          </div>\n\n          <DropDownSelect\n            placeholder={activityPlaceholder}\n            options={activityTypes}\n            inputName=\"activityType\"\n            onChange={handleChange}\n            error={errors?.activityType}\n            isFormOpen={isOpen}\n          />\n\n          <DropDownSelect\n            placeholder={cityPlaceholder}\n            options={cities}\n            inputName=\"city\"\n            onChange={handleChange}\n            error={errors?.city}\n            isFormOpen={isOpen}\n          />\n\n          <Input\n            id=\"formRecommendDescription\"\n            sectionClass=\"form-recom__input form-recom__input_textarea\"\n            type=\"text\"\n            name=\"description\"\n            placeholder={textAreaPlaceholder}\n            onChange={handleChange}\n            value={values.description}\n            required\n            error={errors?.description}\n            isTextarea\n          />\n\n          <span className=\"form-error-message\">{errorsString}</span>\n\n          <div className=\"form-recom__submit-zone\">\n            <div className=\"form-recom__add-photo\">\n              {errors?.image && (\n                <span className=\"form-recom__add-photo-error\">\n                  {errors?.image}\n                </span>\n              )}\n              <div className=\"form-recom__add-photo-container\">\n                {values?.image && (\n                  <span className=\"form-recom__add-photo-span form-recom__add-photo-span_text\">\n                    {addPhotoAdded}\n                  </span>\n                )}\n                <label\n                  className=\"form-recom__add-photo-label\"\n                  htmlFor=\"formRecomInputUpload\"\n                >\n                  <input\n                    id=\"formRecomInputUpload\"\n                    type=\"file\"\n                    name=\"image\"\n                    accept=\"image/png, image/jpeg\"\n                    className=\"form-recom__input-radio\"\n                    onChange={(evt) => handleChangeFiles(evt, regExpImages)}\n                    required\n                  />\n                  {!values?.image && (\n                    <ButtonRound\n                      sectionClass={`form-recom__add-photo-btn ${\n                        errors?.image ? 'form-recom__add-photo-btn_error' : ''\n                      }`}\n                      color={`${errors?.image ? 'error' : 'lightGray'}`}\n                      isSmall\n                      isSpan\n                    />\n                  )}\n                  <span\n                    className={`form-recom__add-photo-span ${\n                      errors?.image ? 'form-recom__add-photo-span_error' : ''\n                    }`}\n                  >\n                    {values?.image ? addPhotoBtnChange : addPhotoBtnDefault}\n                  </span>\n                </label>\n              </div>\n            </div>\n\n            <Button\n              title={isWaitingResponse ? buttonTextLoading : buttonText}\n              color=\"blue\"\n              isDisabled={isWaitingResponse || !isValid}\n              isSubmittable\n            />\n          </div>\n        </>\n      )}\n    </form>\n  );\n}\n\nFormRecommendation.propTypes = {\n  activityTypes: PropTypes.arrayOf(PropTypes.object),\n  isOpen: PropTypes.bool,\n  onSubmit: PropTypes.func,\n  isWaitingResponse: PropTypes.bool,\n};\n\nFormRecommendation.defaultProps = {\n  activityTypes: [],\n  isOpen: false,\n  onSubmit: () => {},\n  isWaitingResponse: false,\n};\n\nexport default FormRecommendation;\n","import { useContext, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport texts from './locales/RU';\nimport { ErrorsContext } from '../../contexts';\nimport { ERROR_CODES, ERROR_MESSAGES } from '../../config/constants';\nimport FormRecommendation from '../FormRecommendation/FormRecommendation';\nimport { postPlace } from '../../api/places-page';\nimport './PlacesRecommend.scss';\n\nfunction PlacesRecommend({ sectionClass, activityTypes, openSuccessPopup }) {\n  const { setError } = useContext(ErrorsContext);\n  const { generalErrorMessage } = ERROR_MESSAGES;\n  const { unauthorized, badRequest } = ERROR_CODES;\n\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [isWaitingResponse, setIsWaitingResponse] = useState(false);\n\n  const scrollAnchorRef = useRef(null);\n  const scrollToForm = () => {\n    scrollAnchorRef.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const closeForm = () => {\n    setIsFormOpen(false);\n  };\n\n  const openForm = () => {\n    setIsFormOpen(true);\n    scrollToForm();\n  };\n\n  const createFormData = (data) => {\n    const formData = new FormData();\n    if (data.link) formData.append('link', data.link);\n    formData.append('image', data.image);\n    formData.append('title', data.title);\n    formData.append('description', data.description);\n    formData.append('address', data.address);\n    formData.append('gender', data.gender);\n    formData.append('age', data.age);\n    formData.append('city', data.city);\n    formData.append('activityType', data.activityType);\n    return formData;\n  };\n\n  const handleFormSubmit = (data) => {\n    setIsWaitingResponse(true);\n    postPlace(createFormData(data))\n      .then(() => {\n        openSuccessPopup();\n        closeForm();\n      })\n      .catch((err) => {\n        if (err?.status === badRequest || err?.status === unauthorized) {\n          setError(err?.data);\n        } else\n          setError({\n            message: generalErrorMessage.title,\n          });\n      })\n      .finally(() => setIsWaitingResponse(false));\n  };\n\n  const classNames = [\n    'recommendation',\n    'recommendation_place_page',\n    'fade-in',\n    sectionClass,\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <>\n      <section className={classNames} ref={scrollAnchorRef}>\n        <div className=\"recommendation__container\">\n          {isFormOpen && (\n            <button\n              className=\"recommendation__close-button\"\n              type=\"button\"\n              aria-label={texts.closeButtonlabel}\n              onClick={closeForm}\n            />\n          )}\n          <p className=\"section-title recommendation__text\">\n            {texts.recommendadionTextPart1}\n            <button\n              className=\"recommendation__text-link\"\n              type=\"button\"\n              onClick={openForm}\n            >\n              {texts.recommendadionButton}\n            </button>\n            {texts.recommendadionTextPart2}\n          </p>\n          <FormRecommendation\n            isOpen={isFormOpen}\n            onSubmit={handleFormSubmit}\n            activityTypes={activityTypes}\n            isWaitingResponse={isWaitingResponse}\n          />\n        </div>\n      </section>\n    </>\n  );\n}\n\nPlacesRecommend.propTypes = {\n  activityTypes: PropTypes.arrayOf(PropTypes.object),\n  sectionClass: PropTypes.string,\n  openSuccessPopup: PropTypes.func,\n};\n\nPlacesRecommend.defaultProps = {\n  activityTypes: [],\n  sectionClass: '',\n  openSuccessPopup: () => {},\n};\n\nexport default PlacesRecommend;\n","import { useContext, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport placesPageTexts from './locales/RU';\nimport { CurrentUserContext, PopupsContext } from '../../contexts';\nimport {\n  COLORS,\n  DELAY_RENDER,\n  ERROR_MESSAGES,\n  localStUserCity,\n} from '../../config/constants';\nimport {\n  useActivityTypes,\n  useFiltrationForPlaces,\n  useLocalStorage,\n  usePageWidth,\n  useSingleCardAtDynamicRoute,\n} from '../../hooks';\nimport {\n  getChosenPlace,\n  getPlaceById,\n  getPlaces,\n  getPlacesTags,\n} from '../../api/places-page';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  CardPlace,\n  Loader,\n  NextArticleLink,\n  NoDataNotificationBox,\n  Paginate,\n  PlacesRecommend,\n  PopupRecommendSuccess,\n  TagsList,\n  TitleH1,\n} from './index';\nimport './Places.scss';\nimport { Card } from '../Articles';\nimport { PLACES_URL } from '../../config/routes';\n\nconst {\n  headTitle,\n  headDescription,\n  title,\n  textStubNoData,\n  paragraphNoContent,\n  toMainPageLinkTitle,\n} = placesPageTexts;\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 8,\n  default: 12,\n};\n\nconst MAX_SCREEN_WIDTH = {\n  small: 1024,\n};\n\nfunction Places() {\n  const { placeId } = useParams();\n  const { activityTypes, activityTypesSimplified } = useActivityTypes();\n\n  const { currentUser } = useContext(CurrentUserContext);\n  const { openPopupCities } = useContext(PopupsContext);\n\n  const getLocalStorageItem = useLocalStorage(localStUserCity);\n  // сохранённый в localStorage город анонимуса\n  const currentAnonymousCity = getLocalStorageItem();\n  const userCity = currentUser?.city ?? currentAnonymousCity;\n  // флаг смены города - нужно снова загружать данные\n  const [isCityChanged, setIsCityChanged] = useState(false);\n\n  // определяет, сколько карточек показывать на странице в зависимости от ширины экрана\n  const { pageSize } = usePageWidth(MAX_SCREEN_WIDTH, PAGE_SIZE_PAGINATE);\n  // стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n  // попап страницы\n  const [isPopupRecommendSuccessOpen, setIsPopupRecommendSuccessOpen] =\n    useState(false);\n\n  const openPopupRecommendSuccess = () => {\n    setIsPopupRecommendSuccessOpen(true);\n  };\n\n  const closePopupRecommendSuccess = () => {\n    setIsPopupRecommendSuccessOpen(false);\n  };\n\n  // одиночная карточка при переходе по динамическому маршруту\n  const { singleCard, isSingleCardShown } = useSingleCardAtDynamicRoute({\n    apiCallback: getPlaceById,\n    dynamicParam: placeId,\n    setIsPageError,\n  });\n\n  // фильтрация и пагинация\n  const filtersAndPaginationSettings = {\n    apiGetDataCallback: getPlaces,\n    apiGetFiltersCallback: getPlacesTags,\n    apiGetMainCardCallback: getChosenPlace,\n    apiFilterNames: {\n      tags: 'tags',\n      chosen: 'chosen',\n      ageRestriction: 'age_restriction',\n    },\n    userCity,\n    pageSize,\n    setIsPageError,\n    dontStartWhileTrue: !!placeId, // скрипты выполнятся, только если нет запроса по id\n  };\n\n  const {\n    dataToRender,\n    filters,\n    ageFilters,\n    mainCard,\n    isMainCard,\n    isMainCardShown,\n    isPageLoading,\n    isFiltersUsed,\n    isPaginationUsed,\n    isNoFilteredResults,\n    isFormRecommendationShown,\n    totalPages,\n    pageIndex,\n    changePageIndex,\n    changeFilter,\n    changeAgeFilter,\n    resetStatesAndGetNewData,\n  } = useFiltrationForPlaces(filtersAndPaginationSettings);\n\n  useEffect(() => {\n    if (!userCity) {\n      setTimeout(() => {\n        openPopupCities();\n      }, DELAY_RENDER);\n    }\n  }, []);\n\n  // повторная загрузка при смене города\n  useEffect(() => {\n    if (!isPageLoading && !placeId) {\n      setIsCityChanged(true);\n      resetStatesAndGetNewData();\n    }\n  }, [userCity]);\n\n  // следит за изменением данных, если это было вызвано сменой города\n  useEffect(() => {\n    if (isCityChanged && !placeId) setIsCityChanged(false);\n  }, [dataToRender]);\n\n  if (isPageLoading || (placeId && !isSingleCardShown)) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <>\n      <BasePage headTitle={headTitle} headDescription={headDescription}>\n        <section className=\"places page__section\">\n          {renderPageContent()}\n        </section>\n      </BasePage>\n      <PopupRecommendSuccess\n        isOpen={isPopupRecommendSuccessOpen}\n        onClose={closePopupRecommendSuccess}\n      />\n    </>\n  );\n\n  function renderPageContent() {\n    // ошибка или нет ивентов для города вообще и не фильтровали\n    if (\n      isPageError ||\n      (!isMainCard && !dataToRender.length && !placeId && !isNoFilteredResults)\n    ) {\n      return renderAnimatedContainer();\n    }\n\n    return (\n      <>\n        <TitleH1 title={title} sectionClass=\"places__title fade-in\" />\n        {renderFiltersAndCards()}\n      </>\n    );\n  }\n\n  function renderAnimatedContainer() {\n    return (\n      <>\n        <AnimatedPageContainer\n          titleText={\n            isPageError\n              ? ERROR_MESSAGES.generalErrorMessage.title\n              : textStubNoData\n          }\n        />\n        {currentUser && !isPageError && (\n          <PlacesRecommend activityTypes={activityTypes} />\n        )}\n      </>\n    );\n  }\n\n  function renderFiltersAndCards() {\n    if (isSingleCardShown) {\n      return (\n        <div className=\"places__single-card-container scale-in\">\n          <CardPlace\n            data={singleCard}\n            activityTypesSimplified={activityTypesSimplified}\n            sectionClass=\"card-container_type_main-article\"\n            isBig\n          />\n\n          <Card sectionClass=\"places__single-card-paragraph\">\n            <p className=\"paragraph\">{singleCard.description}</p>\n          </Card>\n\n          <NextArticleLink text={toMainPageLinkTitle} href={PLACES_URL} />\n        </div>\n      );\n    }\n\n    if (isCityChanged) {\n      return <Loader isPaginate />;\n    }\n\n    return (\n      <>\n        {renderFilters()}\n        {renderAgeFilters()}\n        {currentUser && isFormRecommendationShown && !isFiltersUsed && (\n          <PlacesRecommend\n            activityTypes={activityTypes}\n            openSuccessPopup={openPopupRecommendSuccess}\n          />\n        )}\n        {isFiltersUsed ? <Loader isPaginate /> : renderPlaces()}\n      </>\n    );\n  }\n\n  function renderPlaces() {\n    if (isNoFilteredResults) {\n      return (\n        <NoDataNotificationBox\n          text={paragraphNoContent}\n          isAnimated\n          sectionClass=\"no-data-text_padding-top\"\n        />\n      );\n    }\n\n    if (isMainCard || dataToRender.length > 0) {\n      return (\n        <>\n          {isMainCard && isMainCardShown && (\n            <section className=\"places__main\">\n              <CardPlace\n                key={mainCard?.id}\n                data={mainCard}\n                activityTypesSimplified={activityTypesSimplified}\n                sectionClass=\"card-container_type_main-article scale-in\"\n                isBig\n              />\n            </section>\n          )}\n\n          {!isPaginationUsed ? (\n            <section className=\"places__cards-grid\">\n              {dataToRender.map((place, i) => (\n                <CardPlace\n                  key={place?.id}\n                  data={place}\n                  activityTypesSimplified={activityTypesSimplified}\n                  color={COLORS[(i + 1) % COLORS.length]}\n                  sectionClass=\"card-container_type_article scale-in\"\n                />\n              ))}\n            </section>\n          ) : (\n            <Loader isPaginate />\n          )}\n          {renderPagination()}\n        </>\n      );\n    }\n    return null;\n  }\n\n  function renderPagination() {\n    if (totalPages > 1) {\n      return (\n        <Paginate\n          sectionClass=\"cards-section__pagination\"\n          pageCount={totalPages}\n          value={pageIndex}\n          onChange={changePageIndex}\n        />\n      );\n    }\n    return null;\n  }\n\n  function renderFilters() {\n    // учитываем также кннопку ВСЕ\n    if (filters.length > 2) {\n      return (\n        <TagsList\n          filterList={filters}\n          name=\"categories\"\n          handleClick={changeFilter}\n          sectionClass=\"fade-in\"\n        />\n      );\n    }\n    return null;\n  }\n\n  function renderAgeFilters() {\n    if (!placeId) {\n      return (\n        <TagsList\n          filterList={ageFilters}\n          name=\"ages\"\n          handleClick={changeAgeFilter}\n          sectionClass=\"places__tags fade-in\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default Places;\n"],"sourceRoot":""}