{"version":3,"sources":["components/Cards/CardFigure/CardFigure.js","api/catalog-page.js","components/Cards/CardCatalog/CardCatalog.js","utils/render-lines.js","components/CardsSectionWithLines/CardsSectionWithLines.js","pages/Catalog/locales/RU.js","pages/Catalog/Catalog.js"],"names":["CardFigure","title","shape","color","children","sectionClass","className","defaultProps","getCatalogPageData","limit","offset","axios","get","baseURL","apiUrl","params","then","response","data","catch","err","Promise","reject","getCatalogArticlePageData","articleId","CardCatalog","id","image","link","to","draggable","src","staticImageUrl","alt","renderThoseDamnedLines","dataLength","pageSize","isTablet","renderOneLine","renderTwoLines","renderThreeLines","CardsSectionWithLines","pageCount","pageNumber","setPageNumber","isLoading","useState","setIsTablet","useEffect","tablet","window","matchMedia","listener","matches","addEventListener","removeEventListener","isPaginate","value","onChange","catalogPageTexts","headTitle","MAIN_PAGE_TITLE","CATALOG_TITLE","headDescription","subtitle","textStubNoData","PAGE_SIZE_PAGINATE","small","medium","default","MAX_SCREEN_WIDTH","Catalog","usePageWidth","isPageError","setIsPageError","filtersAndPaginationSettings","apiGetDataCallback","useFiltrationAndPagination","dataToRender","isPageLoading","isPaginationUsed","totalPages","pageIndex","changePageIndex","isCentered","BasePage","length","AnimatedPageContainer","titleText","ERROR_MESSAGES","generalErrorMessage","map","item","i","FIGURES","renderPageContent"],"mappings":"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","file":"static/js/8.fe11bf5c.chunk.js","sourcesContent":["import './CardFigure.scss';\nimport PropTypes from 'prop-types';\n\nfunction CardFigure({ title, shape, color, children, sectionClass }) {\n  return (\n    <div\n      className={`card-figure card-figure_color_${color} card-figure_form_${shape} ${sectionClass}`}\n    >\n      {title && <h2 className=\"section-title\">{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nCardFigure.propTypes = {\n  title: PropTypes.string,\n  shape: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  sectionClass: PropTypes.string,\n};\n\nCardFigure.defaultProps = {\n  title: '',\n  color: 'yellow',\n  children: null,\n  sectionClass: '',\n};\n\nexport default CardFigure;\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\n// получить данные страницы каталога\nfunction getCatalogPageData({ limit, offset }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/catalog/`, {\n      params: { limit, offset },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nfunction getCatalogArticlePageData(articleId) {\n  return axios\n    .get(`${baseURL}${apiUrl}/catalog/${articleId}/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nexport { getCatalogPageData, getCatalogArticlePageData };\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { TitleH2 } from '../../utils';\nimport CardFigure from '../CardFigure/CardFigure';\nimport { staticImageUrl } from '../../../config/config';\nimport './CardCatalog.scss';\n\nfunction CardCatalog({ data: { id, title, image }, shape, sectionClass }) {\n  const link = `/catalog/${id}`;\n  return (\n    <div className={`card-catalog ${sectionClass}`}>\n      <Link to={link} className=\"card-catalog__link-wrap\">\n        <div className=\"card-catalog__image-wrap\">\n          <CardFigure\n            sectionClass=\"card-catalog_type_shaped\"\n            shape={shape}\n            color=\"white\"\n          >\n            <img\n              draggable=\"false\"\n              className=\"card-catalog__image\"\n              src={`${staticImageUrl}/${image}`}\n              alt={title}\n            />\n          </CardFigure>\n        </div>\n        <TitleH2 sectionClass=\"card-catalog__title\" title={title} />\n      </Link>\n    </div>\n  );\n}\n\nCardCatalog.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any),\n  title: PropTypes.string,\n  shape: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  sectionClass: PropTypes.string,\n};\n\nCardCatalog.defaultProps = {\n  data: {},\n  title: '',\n  image: '',\n  sectionClass: '',\n};\n\nexport default CardCatalog;\n","//! хардкод\n// eslint-disable-next-line consistent-return\nfunction renderThoseDamnedLines(dataLength, pageSize, isTablet) {\n  const renderOneLine = () => (\n    <>\n      <div className=\"cards-section__line\" />\n    </>\n  );\n\n  const renderTwoLines = () => (\n    <>\n      <div className=\"cards-section__line\" />\n      <div className=\"cards-section__line\" />\n    </>\n  );\n\n  const renderThreeLines = () => (\n    <>\n      <div className=\"cards-section__line\" />\n      <div className=\"cards-section__line\" />\n      <div className=\"cards-section__line\" />\n    </>\n  );\n\n  if (isTablet) {\n    if (dataLength < 2) return null;\n\n    if (dataLength < 3) return renderOneLine();\n\n    if (dataLength < 4) return renderTwoLines();\n\n    return renderThreeLines();\n  }\n\n  switch (pageSize) {\n    case 16: {\n      if (dataLength < 5) return null;\n\n      if (dataLength < 9) return renderOneLine();\n\n      if (dataLength < 13) return renderTwoLines();\n\n      return renderThreeLines();\n    }\n\n    case 12: {\n      if (dataLength < 4) return null;\n\n      if (dataLength < 7) return renderOneLine();\n\n      if (dataLength < 10) return renderTwoLines();\n\n      return renderThreeLines();\n    }\n\n    case 9: {\n      if (dataLength < 4) return null;\n\n      if (dataLength < 7) return renderOneLine();\n\n      return renderTwoLines();\n    }\n\n    default: {\n      if (dataLength < 3) return null;\n\n      return renderOneLine();\n    }\n  }\n}\n\nexport default renderThoseDamnedLines;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Loader, Paginate } from '../utils';\nimport renderThoseDamnedLines from '../../utils/render-lines';\nimport './CardsSectionWithLines.scss';\n\nconst maxTabletWidth = 900;\n\nfunction CardsSectionWithLines({\n  pageCount,\n  children,\n  pageNumber,\n  setPageNumber,\n  sectionClass,\n  isLoading,\n  dataLength,\n  pageSize,\n}) {\n  const [isTablet, setIsTablet] = useState(false);\n\n  useEffect(() => {\n    const tablet = window.matchMedia(`(max-width: ${maxTabletWidth}px)`);\n\n    const listener = () => {\n      if (tablet.matches) setIsTablet(true);\n      else setIsTablet(false);\n    };\n    listener();\n\n    tablet.addEventListener('change', listener);\n\n    return () => {\n      tablet.removeEventListener('change', listener);\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader isPaginate />\n      ) : (\n        <>\n          <section className={`cards-section ${sectionClass}`}>\n            {renderThoseDamnedLines(dataLength, pageSize, isTablet)}\n            {children}\n          </section>\n        </>\n      )}\n\n      {pageCount > 1 && (\n        <Paginate\n          sectionClass=\"cards-section__pagination cards-section__pagination_no-padding\"\n          pageCount={pageCount}\n          value={pageNumber}\n          onChange={setPageNumber}\n        />\n      )}\n    </>\n  );\n}\n\nCardsSectionWithLines.propTypes = {\n  pageCount: PropTypes.number,\n  children: PropTypes.node,\n  pageNumber: PropTypes.number,\n  setPageNumber: PropTypes.func,\n  sectionClass: PropTypes.string,\n  isLoading: PropTypes.bool,\n  dataLength: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n};\n\nCardsSectionWithLines.defaultProps = {\n  pageCount: 0,\n  children: null,\n  pageNumber: 0,\n  setPageNumber: () => {},\n  sectionClass: '',\n  isLoading: false,\n};\n\nexport default CardsSectionWithLines;\n","import { CATALOG_TITLE, MAIN_PAGE_TITLE } from '../../../config/routes';\n\nconst catalogPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${CATALOG_TITLE}`,\n  headDescription: 'Справочник полезных статей.',\n  title: CATALOG_TITLE,\n  subtitle: `Памятка новичка${'\\u00A0'}– наши материалы, где сможете найти всю базовую информацию, рассказанную на вводном тренинге. Если вы захотите освежить свои знания и${'\\u00A0'}напомнить себе о${'\\u00A0'}чем-то.`,\n  textStubNoData: 'Информация появится в ближайшее время.',\n};\n\nexport default catalogPageTexts;\n","import { useState } from 'react';\nimport catalogPageTexts from './locales/RU';\nimport { getCatalogPageData } from '../../api/catalog-page';\nimport { ERROR_MESSAGES, FIGURES } from '../../config/constants';\nimport { useFiltrationAndPagination, usePageWidth } from '../../hooks';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  CardCatalog,\n  CardsSectionWithLines,\n  Loader,\n  TitleH1,\n  TitleH2,\n} from './index';\nimport './Catalog.scss';\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 4,\n  medium: 9,\n  default: 16,\n};\n\nconst MAX_SCREEN_WIDTH = {\n  small: 1400,\n  medium: 1640,\n};\n\nconst { headTitle, headDescription, title, subtitle, textStubNoData } =\n  catalogPageTexts;\n\nfunction Catalog() {\n  // определяет, сколько карточек показывать на странице в зависимости от ширины экрана\n  const { pageSize } = usePageWidth(MAX_SCREEN_WIDTH, PAGE_SIZE_PAGINATE);\n  // Стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  // пагинация\n  const filtersAndPaginationSettings = {\n    apiGetDataCallback: getCatalogPageData,\n    pageSize,\n    setIsPageError,\n  };\n\n  const {\n    dataToRender,\n    isPageLoading,\n    isPaginationUsed,\n    totalPages,\n    pageIndex,\n    changePageIndex,\n  } = useFiltrationAndPagination(filtersAndPaginationSettings);\n\n  if (isPageLoading) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <BasePage headTitle={headTitle} headDescription={headDescription}>\n      {renderPageContent()}\n    </BasePage>\n  );\n\n  function renderPageContent() {\n    if (isPageError || !dataToRender.length) {\n      return renderAnimatedContainer();\n    }\n\n    return (\n      <section className=\"catalog page__section fade-in\">\n        <TitleH1 sectionClass=\"catalog__title\" title={title} />\n        <TitleH2 sectionClass=\"catalog__subtitle\" title={subtitle} />\n        {renderCards()}\n      </section>\n    );\n  }\n\n  // заглушка\n  function renderAnimatedContainer() {\n    return (\n      <AnimatedPageContainer\n        titleText={\n          isPageError\n            ? ERROR_MESSAGES.generalErrorMessage.title\n            : textStubNoData\n        }\n      />\n    );\n  }\n\n  function renderCards() {\n    return (\n      <CardsSectionWithLines\n        pageCount={totalPages}\n        pageNumber={pageIndex}\n        setPageNumber={changePageIndex}\n        isLoading={isPaginationUsed}\n        dataLength={dataToRender.length}\n        pageSize={pageSize}\n      >\n        {dataToRender.map((item, i) => (\n          <CardCatalog\n            sectionClass=\"cards-section__item scale-in\"\n            key={item?.id}\n            data={item}\n            shape={FIGURES[i % FIGURES.length]}\n          />\n        ))}\n      </CardsSectionWithLines>\n    );\n  }\n}\n\nexport default Catalog;\n"],"sourceRoot":""}