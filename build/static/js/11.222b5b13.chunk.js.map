{"version":3,"sources":["components/TagsList/TagsList.js","components/Cards/CardBook/CardBook.js","api/books-page.js","pages/Books/locales/RU.js","pages/Books/Books.js"],"names":["TagsList","filterList","name","handleClick","classNames","sectionClass","join","trim","classNamesList","length","className","map","item","value","filter","title","isActive","onClick","defaultProps","CardBook","data","author","year","type","annotation","backgroundColor","color","style","description","getBooksPageData","limit","offset","types","axios","get","baseURL","apiUrl","params","then","response","catch","err","Promise","reject","getBooksPageFilter","getBookById","id","booksPageTexts","headTitle","MAIN_PAGE_TITLE","BOOKS_TITLE","headDescription","textStubNoData","PAGE_SIZE_PAGINATE","small","medium","default","MAX_SCREEN_WIDTH","Books","bookId","useParams","pageSize","usePageWidth","useState","isPageError","setIsPageError","useSingleCardAtDynamicRoute","apiCallback","dynamicParam","singleCard","isSingleCardShown","filtersAndPaginationSettings","apiGetDataCallback","apiGetFiltersCallback","apiFilterNames","tags","dontStartWhileTrue","useFiltrationAndPagination","dataToRender","filters","isPageLoading","isFiltersUsed","isPaginationUsed","totalPages","pageIndex","changePageIndex","changeFilter","isCentered","BasePage","scrollUpDeps","AnimatedPageContainer","titleText","ERROR_MESSAGES","generalErrorMessage","renderMainContent","renderPageContent","isOnlyCover","text","toLowerCase","href","BOOKS_URL","renderFilters","isPaginate","books","renderPagination","pageCount","onChange"],"mappings":"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","file":"static/js/11.222b5b13.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PseudoButtonTag } from '../utils';\nimport './TagsList.scss';\n\nconst centeringFiltersMaxLength = 3;\n\nfunction TagsList({ filterList, name, handleClick, sectionClass }) {\n  const classNames = ['tags', sectionClass].join(' ').trim();\n  const classNamesList = [\n    'tags__list',\n    filterList.length > centeringFiltersMaxLength ? 'tags__list_mobile' : '',\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <div className={classNames}>\n      <ul className={classNamesList}>\n        {filterList.map((item) => (\n          <li className=\"tags__list-item\" key={item?.name}>\n            <PseudoButtonTag\n              name={name}\n              value={item?.filter}\n              title={item?.name}\n              isActive={item?.isActive}\n              onClick={handleClick}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTagsList.propTypes = {\n  filterList: PropTypes.arrayOf(PropTypes.any),\n  sectionClass: PropTypes.string,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n\nTagsList.defaultProps = {\n  filterList: [],\n  sectionClass: '',\n  name: '',\n  handleClick: () => {},\n};\n\nexport default TagsList;\n","import PropTypes from 'prop-types';\nimport { Card, TitleH2 } from '../../utils';\nimport CardAnnotation from '../CardAnnotation/CardAnnotation';\nimport './CardBook.scss';\n\nfunction CardBook({\n  data: { title, author, year, type, annotation },\n  sectionClass,\n}) {\n  const backgroundColor = { backgroundColor: type?.color };\n\n  return (\n    <article className={`card-container ${sectionClass}`}>\n      <Card sectionClass=\"card-book\">\n        <div className=\"card-book__cover\" style={backgroundColor || ''}>\n          <TitleH2 sectionClass=\"card-book__title\" title={title} />\n          <div className=\"card-book__info\">\n            <div className=\"card-book__border\" />\n            <p className=\"caption card-book__text\">{author}</p>\n            <p className=\"caption card-book__text\">{year}</p>\n          </div>\n        </div>\n      </Card>\n      <CardAnnotation description={annotation} />\n    </article>\n  );\n}\nCardBook.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any),\n  type: PropTypes.objectOf(PropTypes.any),\n  title: PropTypes.string,\n  author: PropTypes.string,\n  year: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  annotation: PropTypes.string,\n  sectionClass: PropTypes.string,\n};\n\nCardBook.defaultProps = {\n  data: {},\n  type: {},\n  title: '',\n  author: '',\n  year: '',\n  annotation: '',\n  sectionClass: '',\n};\n\nexport default CardBook;\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\n// работа со страницей книги\nfunction getBooksPageData({ limit, offset, types }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/books/`, {\n      params: { types, limit, offset },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\n// все активные теги (фильтры)\nfunction getBooksPageFilter() {\n  return axios\n    .get(`${baseURL}${apiUrl}/books/types/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\n// получение одной книги\nfunction getBookById(id) {\n  return axios\n    .get(`${baseURL}${apiUrl}/books/${id}/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nexport { getBooksPageData, getBooksPageFilter, getBookById };\n","import { BOOKS_TITLE, MAIN_PAGE_TITLE } from '../../../config/routes';\n\nconst booksPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${BOOKS_TITLE}`,\n  headDescription: 'Подборка книг, которые можно почитать, с аннотацией к ним.',\n  title: BOOKS_TITLE,\n  textStubNoData:\n    'В данный момент страница с книгами пуста. Возвращайтесь позже!',\n};\n\nexport default booksPageTexts;\n","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport booksPageTexts from './locales/RU';\nimport { ERROR_MESSAGES } from '../../config/constants';\nimport { BOOKS_URL } from '../../config/routes';\nimport {\n  useFiltrationAndPagination,\n  usePageWidth,\n  useSingleCardAtDynamicRoute,\n} from '../../hooks';\nimport {\n  getBookById,\n  getBooksPageData,\n  getBooksPageFilter,\n} from '../../api/books-page';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  Card,\n  CardBook,\n  Loader,\n  NextArticleLink,\n  Paginate,\n  TagsList,\n  TitleH1,\n} from './index';\nimport './Books.scss';\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 8,\n  medium: 12,\n  default: 16,\n};\n\nconst MAX_SCREEN_WIDTH = {\n  small: 1216,\n  medium: 1640,\n};\n\nconst { headTitle, headDescription, title, textStubNoData } = booksPageTexts;\n\nfunction Books() {\n  const { bookId } = useParams();\n\n  // определяет, сколько карточек показывать на странице в зависимости от ширины экрана\n  const { pageSize } = usePageWidth(MAX_SCREEN_WIDTH, PAGE_SIZE_PAGINATE);\n  // стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  // одиночная карточка при переходе по динамическому маршруту\n  const { singleCard, isSingleCardShown } = useSingleCardAtDynamicRoute({\n    apiCallback: getBookById,\n    dynamicParam: bookId,\n    setIsPageError,\n  });\n\n  // фильтрация и пагинация\n  const filtersAndPaginationSettings = {\n    apiGetDataCallback: getBooksPageData,\n    apiGetFiltersCallback: getBooksPageFilter,\n    apiFilterNames: {\n      tags: 'types',\n    },\n    pageSize,\n    setIsPageError,\n    dontStartWhileTrue: !!bookId, // скрипты выполнятся, только если нет запроса книги по id\n  };\n\n  const {\n    dataToRender,\n    filters,\n    isPageLoading,\n    isFiltersUsed,\n    isPaginationUsed,\n    totalPages,\n    pageIndex,\n    changePageIndex,\n    changeFilter,\n  } = useFiltrationAndPagination(filtersAndPaginationSettings);\n\n  // обычная загрузка или есть переход по id, но книга ещё не загружена\n  if (isPageLoading || (bookId && !isSingleCardShown)) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <>\n      <BasePage\n        headTitle={headTitle}\n        headDescription={headDescription}\n        scrollUpDeps={[bookId]}\n      >\n        <section className=\"books page__section fade-in\">\n          {renderPageContent()}\n        </section>\n      </BasePage>\n    </>\n  );\n\n  function renderPageContent() {\n    // ошибка или (нет данных и при этом это не динамический роут)\n    if (isPageError || (!dataToRender.length && !bookId)) {\n      return renderAnimatedContainer();\n    }\n\n    return (\n      <>\n        <TitleH1 title={title} sectionClass=\"books__title\" />\n        {renderMainContent()}\n      </>\n    );\n  }\n\n  // заглушка\n  function renderAnimatedContainer() {\n    return (\n      <AnimatedPageContainer\n        titleText={\n          isPageError\n            ? ERROR_MESSAGES.generalErrorMessage.title\n            : textStubNoData\n        }\n      />\n    );\n  }\n\n  function renderMainContent() {\n    if (isSingleCardShown) {\n      return (\n        <div className=\"books__single-book-container scale-in\">\n          <CardBook data={singleCard} isOnlyCover sectionClass=\"scale-in\" />\n\n          <Card sectionClass=\"books__single-book-paragraph\">\n            <p className=\"paragraph\">{singleCard.annotation}</p>\n          </Card>\n\n          <NextArticleLink\n            text={`Все ${title.toLowerCase()}`}\n            href={BOOKS_URL}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <>\n        {renderFilters()}\n        {isFiltersUsed ? <Loader isPaginate /> : renderBooksContainer()}\n      </>\n    );\n  }\n\n  function renderFilters() {\n    // учитываем кнопку ВСЕ\n    if (filters.length > 2) {\n      return (\n        <TagsList\n          filterList={filters}\n          name=\"books\"\n          handleClick={changeFilter}\n        />\n      );\n    }\n    return null;\n  }\n\n  function renderBooksContainer() {\n    return (\n      <>\n        {isPaginationUsed ? (\n          <Loader isPaginate />\n        ) : (\n          <ul className=\"books__cards cards-grid cards-grid_content_small-cards fade-in\">\n            {dataToRender.map((books) => (\n              <li className=\"scale-in\" key={books.id}>\n                <CardBook data={books} />\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {renderPagination()}\n      </>\n    );\n  }\n\n  function renderPagination() {\n    if (totalPages > 1) {\n      return (\n        <Paginate\n          sectionClass=\"cards-section__pagination\"\n          pageCount={totalPages}\n          value={pageIndex}\n          onChange={changePageIndex}\n        />\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default Books;\n"],"sourceRoot":""}