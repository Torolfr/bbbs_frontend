{"version":3,"sources":["components/TagsList/TagsList.js","api/movies-page.js","pages/Movies/locales/RU.js","pages/Movies/Movies.js"],"names":["TagsList","filterList","name","handleClick","classNames","sectionClass","join","trim","classNamesList","length","className","map","item","value","filter","title","isActive","onClick","defaultProps","getMoviesPageData","limit","offset","tags","axios","get","baseURL","apiUrl","params","then","response","data","catch","err","Promise","reject","getMoviesPageFilter","getMovieById","id","moviesPageTexts","headTitle","MAIN_PAGE_TITLE","MOVIES_TITLE","headDescription","textStubNoData","PAGE_SIZE_PAGINATE","small","medium","big","default","MAX_SCREEN_WIDTH","Movies","state","useLocation","openPopupVideo","useContext","PopupsContext","usePageWidth","pageSize","isSmallQuery","useState","isPageError","setIsPageError","filtersAndPaginationSettings","apiGetDataCallback","apiGetFiltersCallback","apiFilterNames","useFiltrationAndPagination","dataToRender","filters","isPageLoading","isFiltersUsed","isPaginationUsed","totalPages","pageIndex","changePageIndex","changeFilter","useEffect","res","setLocalStorageData","localStChosenVideo","isCentered","BasePage","AnimatedPageContainer","titleText","ERROR_MESSAGES","generalErrorMessage","renderFilters","isPaginate","movie","CardFilm","isMobile","CardAnnotation","description","annotation","renderPaginate","renderPageContent","pageCount","onChange"],"mappings":"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","file":"static/js/14.1b84d989.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PseudoButtonTag } from '../utils';\nimport './TagsList.scss';\n\nconst centeringFiltersMaxLength = 3;\n\nfunction TagsList({ filterList, name, handleClick, sectionClass }) {\n  const classNames = ['tags', sectionClass].join(' ').trim();\n  const classNamesList = [\n    'tags__list',\n    filterList.length > centeringFiltersMaxLength ? 'tags__list_mobile' : '',\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <div className={classNames}>\n      <ul className={classNamesList}>\n        {filterList.map((item) => (\n          <li className=\"tags__list-item\" key={item?.name}>\n            <PseudoButtonTag\n              name={name}\n              value={item?.filter}\n              title={item?.name}\n              isActive={item?.isActive}\n              onClick={handleClick}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTagsList.propTypes = {\n  filterList: PropTypes.arrayOf(PropTypes.any),\n  sectionClass: PropTypes.string,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n\nTagsList.defaultProps = {\n  filterList: [],\n  sectionClass: '',\n  name: '',\n  handleClick: () => {},\n};\n\nexport default TagsList;\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\n// работа со страницей фильмы\nfunction getMoviesPageData({ limit, offset, tags }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/movies/`, {\n      params: { tags, limit, offset },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\n// все активные теги (фильтры)\nfunction getMoviesPageFilter() {\n  return axios\n    .get(`${baseURL}${apiUrl}/movies/tags/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\n// получение одного видео\nfunction getMovieById(id) {\n  return axios\n    .get(`${baseURL}${apiUrl}/movies/${id}/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nexport { getMoviesPageData, getMoviesPageFilter, getMovieById };\n","import { MAIN_PAGE_TITLE, MOVIES_TITLE } from '../../../config/routes';\n\nconst moviesPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${MOVIES_TITLE}`,\n  headDescription:\n    'Подборка фильмов, которые можно посмотреть, с аннотацией к ним.',\n  title: MOVIES_TITLE,\n  textStubNoData:\n    'В данный момент страница c фильмами пуста. Возвращайтесь позже!',\n};\n\nexport default moviesPageTexts;\n","import { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport moviesPageTexts from './locales/RU';\nimport { PopupsContext } from '../../contexts';\nimport { ERROR_MESSAGES, localStChosenVideo } from '../../config/constants';\nimport { useFiltrationAndPagination, usePageWidth } from '../../hooks';\nimport { setLocalStorageData } from '../../hooks/useLocalStorage';\nimport {\n  getMovieById,\n  getMoviesPageData,\n  getMoviesPageFilter,\n} from '../../api/movies-page';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  CardAnnotation,\n  CardFilm,\n  Loader,\n  Paginate,\n  TagsList,\n  TitleH1,\n} from './index';\nimport './Movies.scss';\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 8,\n  medium: 8,\n  big: 12,\n  default: 16,\n};\n\nconst MAX_SCREEN_WIDTH = {\n  small: 767,\n  medium: 1216,\n  big: 1451,\n};\n\nconst { headTitle, headDescription, title, textStubNoData } = moviesPageTexts;\n\nfunction Movies() {\n  const { state } = useLocation();\n  const { openPopupVideo } = useContext(PopupsContext);\n\n  // определяет, сколько карточек показывать на странице в зависимости от ширины экрана\n  const { pageSize, isSmallQuery } = usePageWidth(\n    MAX_SCREEN_WIDTH,\n    PAGE_SIZE_PAGINATE\n  );\n  // стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  // фильтрация и пагинация\n  const filtersAndPaginationSettings = {\n    apiGetDataCallback: getMoviesPageData,\n    apiGetFiltersCallback: getMoviesPageFilter,\n    apiFilterNames: {\n      tags: 'tags',\n    },\n    pageSize,\n    setIsPageError,\n  };\n\n  const {\n    dataToRender,\n    filters,\n    isPageLoading,\n    isFiltersUsed,\n    isPaginationUsed,\n    totalPages,\n    pageIndex,\n    changePageIndex,\n    changeFilter,\n  } = useFiltrationAndPagination(filtersAndPaginationSettings);\n\n  // Откртие попапа при переходе из поиска\n  useEffect(() => {\n    if (state) {\n      getMovieById(state.id)\n        .then((res) => {\n          setLocalStorageData(localStChosenVideo, res);\n          openPopupVideo();\n        })\n        .catch(() => setIsPageError(true));\n    }\n  }, [state]);\n\n  // глобальный лоадер\n  if (isPageLoading) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <BasePage headTitle={headTitle} headDescription={headDescription}>\n      <section className=\"movies page__section fade-in\">\n        {renderPageContent()}\n      </section>\n    </BasePage>\n  );\n\n  // главная функция рендеринга\n  function renderPageContent() {\n    if (isPageError || !dataToRender.length) {\n      return renderAnimatedContainer();\n    }\n\n    return (\n      <>\n        <TitleH1 title={title} sectionClass=\"movies__title\" />\n\n        {renderFilters()}\n\n        {isFiltersUsed ? <Loader isPaginate /> : renderMoviesContainer()}\n      </>\n    );\n  }\n\n  function renderAnimatedContainer() {\n    return (\n      <AnimatedPageContainer\n        titleText={\n          isPageError\n            ? ERROR_MESSAGES.generalErrorMessage.title\n            : textStubNoData\n        }\n      />\n    );\n  }\n\n  function renderFilters() {\n    // учитывается кнопка ВСЕ\n    if (filters.length > 2) {\n      return (\n        <TagsList\n          filterList={filters}\n          name=\"movies\"\n          handleClick={changeFilter}\n        />\n      );\n    }\n    return null;\n  }\n\n  // контейнер с фильмами\n  function renderMoviesContainer() {\n    return (\n      <>\n        {isPaginationUsed ? (\n          <Loader isPaginate />\n        ) : (\n          <ul className=\"movies__cards cards-grid cards-grid_content_small-cards fade-in\">\n            {dataToRender.map((movie) => (\n              <li className=\"card-container scale-in\" key={movie.id}>\n                <CardFilm data={movie} isMobile={isSmallQuery} />\n                <CardAnnotation description={movie.annotation} />\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {renderPaginate()}\n      </>\n    );\n  }\n\n  function renderPaginate() {\n    if (totalPages > 1) {\n      return (\n        <Paginate\n          sectionClass=\"cards-section__pagination\"\n          pageCount={totalPages}\n          value={pageIndex}\n          onChange={changePageIndex}\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default Movies;\n"],"sourceRoot":""}